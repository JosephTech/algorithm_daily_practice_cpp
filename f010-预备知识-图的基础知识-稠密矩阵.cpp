/*
预备知识：图的定义
	图(Graph)是由顶点的有穷非空集合和顶点之间的边的集合组成，
	通常表示为：
	G(V,E)，其中，G表示一个图。V是图G中顶点的集合， E是图G中边的集合

	图分为无向图和有向图，根据图的边长，又分带权图 和 不带权图
	（之后讨论的都是不带权图，即连线表示连接，没有权重）
*/
/*
图的构造与表示
*/
#include <iostream>

int main() {
	const int MAX_N = 5;
	int Graph[MAX_N][MAX_N] = {0};
	//一般用邻接矩阵表示稠密图，因为连接多
	//稀疏图时候，就是连接很少的时候，就不用稠密矩阵，而是用邻接表表示

	Graph[0][2] = 1; //表示第0个节点，连接了第2个节点
	Graph[0][4] = 1; //表示第0个节点，连接了第4个节点
	Graph[1][0] = 1; //表示第1个节点，连接了第0个节点
	Graph[1][2] = 1; //表示第1个节点，连接了第2个节点
	Graph[2][3] = 1; //表示第2个节点，连接了第3个节点
	Graph[3][4] = 1; //表示第3个节点，连接了第4个节点
	Graph[4][3] = 1; //表示第4个节点，连接了第3个节点
	//无权重，所以非0即1

	//打印
	for (int i = 0; i < MAX_N; i++) {
		for (int j = 0; j < MAX_N; j++) {
			printf("%d ", Graph[i][j]);
		}
		printf("\n");
	}
	system("pause");
	return 0;
}
